name: Create Release

on:
  push:
    tags:
      - "v*" # Push events to tags matching v*, i.e. v1.0, v20.15.10

# Add permissions for GitHub token
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Enable caching on subsequent runs
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Set up private key from secrets
        run: |
          mkdir -p keys
          echo "${{ secrets.EXTENSION_PRIVATE_KEY }}" > keys/private.pem
          # If the secret is not set, generate a new key
          if [ ! -s keys/private.pem ]; then
            echo "No private key found in secrets, generating a new one..."
            openssl genrsa -out keys/private.pem 2048
          fi
          chmod 600 keys/private.pem
          ls -la keys/

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Check manifest version
        run: |
          MANIFEST_VERSION=$(grep -o '"version": "[^"]*"' manifest.json | cut -d'"' -f4)
          echo "Manifest version: $MANIFEST_VERSION"
          echo "Tag version: ${{ env.VERSION }}"
          # Optional: Update manifest version to match tag if different
          if [ "$MANIFEST_VERSION" != "${{ env.VERSION }}" ]; then
            echo "Updating manifest version to ${{ env.VERSION }}"
            sed -i "s/\"version\": \"$MANIFEST_VERSION\"/\"version\": \"${{ env.VERSION }}\"/g" manifest.json
          fi

      - name: Create ZIP file
        run: |
          mkdir -p dist
          echo "Creating ZIP file for the extension..."
          zip -r "dist/goodreads-where-to-buy-${{ env.VERSION }}.zip" . \
              -x "node_modules/*" -x "dist/*" -x ".git/*" -x "keys/*" -x ".github/*" -x ".DS_Store"
          echo "Dist directory contents:"
          ls -la dist/

      - name: Create simple CRX placeholder
        run: |
          echo "Creating a placeholder CRX file..."
          echo -n "Cr24" > "dist/goodreads-where-to-buy-${{ env.VERSION }}.crx"
          echo "Please use the ZIP file for installation. This CRX file is a placeholder." >> "dist/goodreads-where-to-buy-${{ env.VERSION }}.crx"
          ls -la dist/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false
          files: |
            dist/*.zip
          body: |
            ## Goodreads Where To Buy - Version ${{ env.VERSION }}

            ### Installation Instructions

            1. Download the `.zip` file
            2. Extract the zip file to a folder on your computer
            3. Open Chrome and navigate to `chrome://extensions/`
            4. Enable "Developer mode" in the top right corner
            5. Click "Load unpacked" and select the extracted extension directory

            Note: CRX installation is not currently supported. Please use the ZIP file method.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
